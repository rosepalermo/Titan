% find longest shoreline in each of the time steps and order it

% load data
load('/Users/rosepalermo/Documents/Research/Titan/ModelOutput/paper1/results1/cluster/091820/rand_hwave_luniform.mat')
addpath(genpath('/Users/rosepalermo/Documents/GitHub/Titan/CoupledCoastTadpole'))
% identify shoreline
ind = size(g.output,3);
if isfield(p,'boundary')
    ind = size(g.output,3)-1;
end

for i = 1:ind
    
    lake = g.output(:,:,i)<p.sealevel_init;
% find number of first order lakes
[F_lake_all,~,~,~] = find_first_order_lakes(lake);

for ff = 1:length(F_lake_all)
    length_sl = 
    F_lake = F_lake_all{ff};
    if length(find(F_lake))<2
        continue
    end
    clearvars fetch_sl_cells indshoreline_ordered WaveArea_cell
    
    %order the shoreline and islands
    % new order the shoreline code
    [indshoreline_ocw,~,cells2trash_ff,p] = order_shoreline_bwbound(F_lake,p);
    if isfield(p,'boundary')
        dam_matrix= [];
        wave_weight_matrix= [];
        indshoreline_ordered= [];
        cells2trash= [];
        return
    end
    cells2trash = [cells2trash;cells2trash_ff];
    
    if isempty(indshoreline_ocw) % stops eroding when shoreline hits the boundary
        break
    end
    
    for l = 1: length(indshoreline_ocw)
        indshoreline_ordered{l,1} = sub2ind(size(X),indshoreline_ocw{l}(:,1),indshoreline_ocw{l}(:,2));
        fetch_sl_cells{l,1}(:,1) = X(indshoreline_ordered{l,1});
        fetch_sl_cells{l,1}(:,2) = Y(indshoreline_ordered{l,1});
    end

end


end