close all; clear all

load('initialtopo.mat')
x = 1:400; y = x;
[X,Y] = meshgrid(x,y);

figure()
ind_all = [NaN];
dam_all = [NaN];
damcorn_all = [NaN];
corners_all = [NaN];

% iterate over 0.1 m and calculate damage for uniform erosion
for SL = 10
    % define the shoreline
    lake = init<SL;
    
    [F_lake_all,~,~,~] = find_first_order_lakes(lake);
    for ff = 1:length(F_lake_all)
        F_lake = F_lake_all{ff};
        if length(find(F_lake))<2
            continue
        end
        [dam,damcorn,corners,indshoreline] = find_fetch(F_lake,X,Y);
        dam_all = [dam_all;dam];
        damcorn_all = [damcorn_all;damcorn];
        ind_all = [ind_all;indshoreline];
        corners_all = [corners_all;corners];
    end
end
ind_all = ind_all(2:end);
dam_all = dam_all(2:end);
damcorn_all = damcorn_all(2:end);
corners_all = corners_all(2:end);

% plot
[y_ind,x_ind] = ind2sub(size(lake),ind_all);
scatter3(x_ind,y_ind,dam_all,[],dam_all)

view(2)

caxis([0 10])
axis equal
x_all = x_all(2:end); y_all = y_all(2:end);


%%
SL1 = 1; SL2 = 10;

lake1 = init<SL1;
lake2 = init<SL2;


ind_all1 = [NaN];
dam_all1 = [NaN];
damcorn_all1 = [NaN];
corners_all1 = [NaN];

    [F_lake_all,~,~,~] = find_first_order_lakes(lake1);
    for ff = 1:length(F_lake_all)
        F_lake = F_lake_all{ff};
        if length(find(F_lake))<2
            continue
        end
        [dam,damcorn,corners,indshoreline] = find_fetch(F_lake,X,Y);
        dam_all1 = [dam_all1;dam];
        damcorn_all1 = [damcorn_all1;damcorn];
        ind_all1 = [ind_all1;indshoreline];
        corners_all1 = [corners_all1;corners];
    end
    
ind_all1 = ind_all1(2:end);
dam_all1 = dam_all1(2:end);
damcorn_all1 = damcorn_all1(2:end);
corners_all1 = corners_all1(2:end);


ind_all2 = [NaN];
dam_all2 = [NaN];
damcorn_all2 = [NaN];
corners_all2 = [NaN];
ind_sl1 = [ind_all2;corners_all2];
fetch_sl2 = [

        [F_lake_all,~,~,~] = find_first_order_lakes(lake2);
    for ff = 1:length(F_lake_all)
        F_lake = F_lake_all{ff};
        if length(find(F_lake))<2
            continue
        end
        [dam,damcorn,corners,indshoreline] = find_fetch(F_lake,X,Y);
        dam_all2 = [dam_all2;dam];
        damcorn_all2 = [damcorn_all2;damcorn];
        ind_all2 = [ind_all1;indshoreline];
        corners_all2 = [corners_all1;corners];
    end

ind_all2 = ind_all1(2:end);
dam_all2 = dam_all1(2:end);
damcorn_all2 = damcorn_all1(2:end);
corners_all2 = corners_all1(2:end);
    
[damage1] = addidshoreline(lake1,~lake1); % corners and edges
[damage2] = addidshoreline(lake2,~lake2); % corners and edges
indshoreline1 = find(damage1);
dam1 = damage1(indshoreline1);
indshoreline2 = find(damage2);
dam2 = damage2(indshoreline2);
[y_ind1,x_ind1] = ind2sub(size(lake1),indshoreline1);
[y_ind2,x_ind2] = ind2sub(size(lake2),indshoreline2);

% figure
% scatter3(x_ind1,y_ind1,dam1,[],dam1)
% view(2)
% hold on
% scatter3(x_ind2,y_ind2,dam2,[],dam2)

sl2 = damage2;
sl2(sl2>0) = 1;
intermediate = lake2 - lake1 + sl2;
% figure()
% imagesc(intermediate)
[y_indint,x_indint] = ind2sub(size(intermediate),find(intermediate));

daminterp = damage1 + damage2;
% daminterp(daminterp=0)=NaN;
[y_daminterp,x_daminterp] = ind2sub(size(daminterp),find(daminterp));
Vq = griddata(x_daminterp,y_daminterp,daminterp(find(daminterp)),x_indint,y_indint);

figure
scatter3(x_indint,y_indint,Vq,[],Vq)
view(2)
caxis([0 10])
axis equal

figure(); imagesc(init); caxis([SL1 SL2])
axis equal
set(gca,'Ydir','normal')